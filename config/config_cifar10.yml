# Hyperparameter configuration for training

meta:
  # Used for training and testing
  exp_id: 1
  dataset: 'cifar10' # Dataset: 'mnist', 'cifar10', 'imagenette'
  # TODO: Core model: 'prn_20' (Pre-act ResNet-20), 'frn_20' (Fixup ResNet-20), 
  # 'nf_resnet_26' (Normalizer-Free ResNet-26), 'resnet34' (ResNet-34)
  exp_core: 'prn_20' 
  # TODO: Wrapper method: 'clean', 'at', 'trades', 'pair_at', 'match_at'
  exp_wrapper: 'pair_at' 
  exp_attacker: 'pgd' # Evaluation attacker: 'noatt', 'pgd'
  data_path: './data'
  results_path: './results'
  gpu_ids: '0'
  random_seed: 2019

train:
  # Used for training and data loading
  batch_size: 128
  val_ratio: 0.1
  num_workers: 4
  train_epochs: 80
  load_pretrain: False

test:
  # Used for testing
  num_sample: 10000
  batch_size: 500
  exp_name: '' # Empty to use latest experiment
  load_epoch: 70
  use_aa: True
  use_pgd: True

core:
  pretrained: False
  # Used for initializing core model
  num_classes: 10
  learning_rate: 0.05
  lr_decay: 0.1
  lr_steps: [40, 55, 70]
  weight_decay: 0.0005
  # TODO: Set normalization layer here ('bn', 'gn', 'in', 'none', 'dbn')
  normalization_layer: 'bn'   
  # For DBN
  shared_affine: True
  temperature: 1
  score_func: 'prob'
  score_norm_func: 'linear'
  combine_mode: null
  # For GN
  num_group: 32
  # For clipping gradients
  # clip_grad: 10
  use_asc: False

wrapper:
  # Used for initializing wrapper model
  # All
  eps_train: 0.06274509804  # 16/255
  eps_test: 0.06274509804
  # eps_train: 0.03137254901  # 8/255
  # eps_test: 0.03137254901

  # TRADES
  adv_beta: 6
  trades_concat: True

  # PairAT (use for MAT and MAT + KL)
  dist_reg: 'none'
  reg_weight: 0.
  pair_samples: False
  normalize_dim: False
  concat: True        # TODO: Set whether to concatenate the batch
  loss_weight: 0.5    # TODO: gamma
  pair_trades: False  # TODO: whetehr to use TRADES
  pair_kld: False     # TODO: whether to use KLD regularization for MAT
  pair_adv_beta: 1    # TODO: beta to use for KLD regularization, if above option selected
  pair_reg_use_input: True
  track_stats: False

  # MatchAT
  # This specify the mode of DBN. 'clean' behaves like normal BN, 'gmm' is the mode described in the paper.
  match_train_mode: ['clean', 'clean', 'clean', 'gmm', 'clean', 'clean', 'clean', 'gmm',
                     'clean', 'clean', 'clean', 'gmm', 'clean', 'clean', 'clean', 'gmm']
  match_tune_epoch: 9999
  match_tune_fix_bn: False
  match_tune_fix_dbn: False
  match_concat: True
  match_loss_weight: 0.5    # TODO: gamma
  match_trades: False       # TODO: whetehr to use TRADES
  match_kld: False          # TODO: whether to use KLD regularization
  match_adv_beta: 1         # TODO: beta
  match_reg_func: 'score'
  match_reg_weight: 1.0e-3  # TODO: NLL regularization for DBN
  match_reg_use_input: False

attack:
  # Used for initializing attacker agent
  # PGD
  pgd_steps: 10
  pgd_step_size: 0.01568627451  # 4/255
  # pgd_step_size: 0.00784313725  # 2/255
  num_restarts: 1
